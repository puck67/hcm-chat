#!/usr/bin/env python3
"""
Test script ƒë·ªÉ ki·ªÉm tra c∆° ch·∫ø fallback c·ªßa h·ªá th·ªëng chatbot
Ki·ªÉm tra xem h·ªá th·ªëng c√≥ th·ªÉ tr·∫£ l·ªùi c√¢u h·ªèi n·∫±m ngo√†i t√†i li·ªáu .md hay kh√¥ng
"""

import requests
import json

# C·∫•u h√¨nh API endpoint
API_BASE = "http://localhost:8000"

def test_question(question, description):
    """Test m·ªôt c√¢u h·ªèi v√† hi·ªÉn th·ªã k·∫øt qu·∫£"""
    print(f"\n{'='*60}")
    print(f"TEST: {description}")
    print(f"C√¢u h·ªèi: {question}")
    print('='*60)
    
    try:
        # G·ª≠i request
        response = requests.post(
            f"{API_BASE}/chat",
            headers={"Content-Type": "application/json"},
            json={"question": question},
            timeout=30
        )
        
        if response.status_code == 200:
            result = response.json()
            
            print(f"‚úÖ Tr·∫°ng th√°i: Th√†nh c√¥ng")
            print(f"üìù C√¢u tr·∫£ l·ªùi: {result.get('answer', 'N/A')[:200]}...")
            print(f"üîç Ngu·ªìn tham kh·∫£o: {len(result.get('sources', []))} ngu·ªìn")
            print(f"üìä ƒê·ªô tin c·∫≠y: {result.get('confidence', 0)}%")
            
            # Ki·ªÉm tra c√≥ ph·∫£i fallback kh√¥ng (kh√¥ng c√≥ sources ho·∫∑c confidence th·∫•p)
            sources = result.get('sources', [])
            confidence = result.get('confidence', 0)
            
            if not sources or confidence <= 75:
                print(f"üîÑ Ph√°t hi·ªán: C√≥ th·ªÉ s·ª≠ d·ª•ng FALLBACK (Gemini tr·ª±c ti·∫øp)")
            else:
                print(f"üìö Ph√°t hi·ªán: S·ª≠ d·ª•ng d·ªØ li·ªáu t·ª´ t√†i li·ªáu .md")
                
        else:
            print(f"‚ùå L·ªói: {response.status_code} - {response.text}")
            
    except Exception as e:
        print(f"‚ùå Exception: {e}")

def main():
    """Ch·∫°y c√°c test case"""
    print("üöÄ B·∫ÆT ƒê·∫¶U KI·ªÇM TRA C∆† CH·∫æ FALLBACK")
    
    # Test 1: C√¢u h·ªèi trong t√†i li·ªáu .md
    test_question(
        "T∆∞ t∆∞·ªüng H·ªì Ch√≠ Minh l√† g√¨?",
        "C√¢u h·ªèi TRONG t√†i li·ªáu .md (n√™n c√≥ sources)"
    )
    
    # Test 2: C√¢u h·ªèi ngo√†i t√†i li·ªáu .md - C√¥ng ngh·ªá
    test_question(
        "B·∫°n c√≥ bi·∫øt v·ªÅ c√¥ng ngh·ªá AI hi·ªán t·∫°i kh√¥ng?",
        "C√¢u h·ªèi NGO√ÄI t√†i li·ªáu .md - C√¥ng ngh·ªá AI"
    )
    
    # Test 3: C√¢u h·ªèi ngo√†i t√†i li·ªáu .md - Th·ªùi ti·∫øt
    test_question(
        "H√¥m nay th·ªùi ti·∫øt H√† N·ªôi nh∆∞ th·∫ø n√†o?",
        "C√¢u h·ªèi NGO√ÄI t√†i li·ªáu .md - Th·ªùi ti·∫øt"
    )
    
    # Test 4: C√¢u h·ªèi ngo√†i t√†i li·ªáu .md - To√°n h·ªçc
    test_question(
        "2 + 2 b·∫±ng bao nhi√™u?",
        "C√¢u h·ªèi NGO√ÄI t√†i li·ªáu .md - To√°n h·ªçc c∆° b·∫£n"
    )
    
    # Test 5: C√¢u h·ªèi ngo√†i t√†i li·ªáu .md - L·ªãch s·ª≠ th·∫ø gi·ªõi
    test_question(
        "Th·∫ø chi·∫øn th·ª© 2 b·∫Øt ƒë·∫ßu nƒÉm n√†o?",
        "C√¢u h·ªèi NGO√ÄI t√†i li·ªáu .md - L·ªãch s·ª≠ th·∫ø gi·ªõi"
    )
    
    print(f"\n{'='*60}")
    print("üèÅ K·∫æT TH√öC KI·ªÇM TRA")
    print("üìã K·∫æT LU·∫¨N:")
    print("- N·∫øu c√¢u h·ªèi c√≥ sources v√† confidence cao ‚Üí T·ª´ t√†i li·ªáu .md")
    print("- N·∫øu c√¢u h·ªèi kh√¥ng c√≥ sources ho·∫∑c confidence th·∫•p ‚Üí Fallback Gemini")
    print("- H·ªá th·ªëng S·∫º tr·∫£ l·ªùi c·∫£ c√¢u h·ªèi ngo√†i t√†i li·ªáu th√¥ng qua fallback")
    print('='*60)

if __name__ == "__main__":
    main()
